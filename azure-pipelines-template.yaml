jobs:
- job: ${{ parameters.name }}
  pool: 
    vmImage: ${{ parameters.vmImage }}
  steps: 
    # Install Rust and cargo fmt
    - ${{ if ne(parameters.name, 'Windows') }}:
      - script: | 
          curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable
          export PATH="$HOME/.cargo/bin:$PATH"
          echo "##vso[task.setvariable variable=PATH]$PATH"
          rustc -Vv
          cargo -V
          rustup component add rustfmt-preview
        displayName: Install Rust
    - ${{ if eq(parameters.name, 'Windows') }}:
      - script: | 
            curl -sSf -o rustup-init.exe https://win.rustup.rs
            rustup-init.exe -y --default-toolchain stable
            set PATH=%PATH%;%USERPROFILE%\.cargo\bin
            echo "##vso[task.setvariable variable=PATH]%PATH%;%USERPROFILE%\.cargo\bin"
            rustc -Vv
            cargo -V
            rustup component add rustfmt-preview
        displayName: Install Rust
    # Install Spatial
    - ${{ if eq(parameters.name, 'MacOS') }}:
      - script: |
          mkdir -p ~/.spatial
          curl -sSfL -o ~/.spatial/spatial https://console.improbable.io/toolbelt/download/latest/mac
          chmod +x ~/.spatial/spatial
          export PATH="${PATH}:~/.spatial/"
          spatial version
        displayName: Install Spatial CLI
    - ${{ if eq(parameters.name, 'Linux') }}:
      - script: |
          mkdir -p ~/.spatial
          curl -sSfL -o ~/.spatial/spatial https://console.improbable.io/toolbelt/download/latest/linux
          chmod +x ~/.spatial/spatial
          export PATH="${PATH}:~/.spatial/"
          spatial version
        displayName: Install Spatial CLI
    - ${{ if eq(parameters.name, 'Windows') }}:
      - script: |
          md %USERPROFILE%\.spatial
          curl -sSfL -o %USERPROFILE%\.spatial\spatial https://console.improbable.io/toolbelt/download/latest/win
          set PATH=%PATH%;%USERPROFILE%\.spatial
          echo "##vso[task.setvariable variable=PATH]%PATH%;%USERPROFILE%\.spatial"
          spatial version
        displayName: Install Spatial CLI
    # Setup Spatial oauth tokens
    - task: DownloadSecureFile@1
      inputs:
        secureFile: spatial_oauth
      displayName: Fetch Spatial OAuth Token
    - ${{ if ne(parameters.name, 'Windows') }}:
      - script: |
          mkdir -p ~/.improbable/oauth2/
          mv "${DOWNLOADSECUREFILE_SECUREFILEPATH}" ~/.improbable/oauth2/oauth2_refresh_token
        displayName: Install Spatial OAuth Token
    - ${{ if eq(parameters.name, 'Windows') }}:
        - powershell: |
            mkdir -p %LOCALAPPADTA\.improbable\oauth2
            mv $env:DOWNLOADSECUREFILE_SECUREFILEPATH LOCALAPPADTA\.improbable\oauth2\oauth2_refresh_token
          displayName: Install Spatial OAuth Token
    # Run the build
    - script: cargo run --bin download_sdk -- -d ./spatialos-sdk/dependencies -s 13.3.0
      displayName: Download C API dependencies
    - script: cargo build
      displayName: Build SpatialOS SDK for Rust
    - script: cargo build --examples
      displayName: Build the Examples